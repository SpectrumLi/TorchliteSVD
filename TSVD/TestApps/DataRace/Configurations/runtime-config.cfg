<?xml version="1.0"?>
<TSVDRuntimeConfiguration>
  <ThrowExceptionOnRace>false</ThrowExceptionOnRace>

  <!--<TrapAlgorithm>Randomized</TrapAlgorithm>-->
  <TrapAlgorithm>LearnedHB</TrapAlgorithm>

  <RandomizedTrapController>
    <RandomSeed>100</RandomSeed>
    <DelayProbability>0.05</DelayProbability>
    <MaxDelayPerTorchPoint>100</MaxDelayPerTorchPoint>
    <EnforceMaxDelayPerThread>true</EnforceMaxDelayPerThread>
    <MaxDelayPerThread>20000</MaxDelayPerThread>
    <MaxDelayPerThreadPercentage>0</MaxDelayPerThreadPercentage>
  </RandomizedTrapController>

  <HBTrapController>
    <DelayProbability>1</DelayProbability>
    <MaxDelayPerTorchPoint>100</MaxDelayPerTorchPoint>
    <DelayProbabilityAtDangerousTorchPoint>1</DelayProbabilityAtDangerousTorchPoint>
    <DelayPerDangerousTorchPoint>100</DelayPerDangerousTorchPoint>
  </HBTrapController>


  <!--<BugLogPath>%LoggingDirectory%\torch-bugs.torchlog</BugLogPath>
  <TrapLogPath>%LoggingDirectory%\torch-traps.torchlog</TrapLogPath>-->
  <BugLogPath>torch-bugs.torchlog</BugLogPath>
  <TrapLogPath>torch-traps.torchlog</TrapLogPath>
  <ThreadSafetyGroup>
    <Name>Dictionary</Name>
    <WriteAPI>System.Collections.Generic.Dictionary*.Add(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.Dictionary*.Remove(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.Dictionary*.Clear(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.Dictionary*.Item.set*</WriteAPI>
    <WriteAPI>System.Collections.Generic.Dictionary*.set*</WriteAPI>

    <ReadAPI>System.Collections.Generic.Dictionary*.Item.get*</ReadAPI>
    <ReadAPI>System.Collections.Generic.Dictionary*.ContainsKey(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.Dictionary*.ContainsValue(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.Dictionary*.TryGetValue(*)</ReadAPI>
  </ThreadSafetyGroup>


  <ThreadSafetyGroup>
    <Name>IDictionary</Name>
    <WriteAPI>System.Collections.Generic.IDictionary*.Add(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.IDictionary*.Remove(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.IDictionary*.Clear(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.IDictionary*.Item.set*</WriteAPI>
    <ReadAPI>System.Collections.Generic.IDictionary*.Item.get*</ReadAPI>
    <ReadAPI>System.Collections.Generic.IDictionary*.ContainsKey(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.IDictionary*.TryGetValue(*)</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>HashSet</Name>
    <WriteAPI>System.Collections.Generic.HashSet*.Add(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.HashSet*.Remove(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.HashSet*.*With(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.HashSet*.Clear(*)</WriteAPI>

    <ReadAPI>System.Collections.Generic.HashSet*.Contains(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.HashSet*.CopyTo(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.HashSet*.Is*Of(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.HashSet*.MemberwiseClone(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.HashSet*.Overlaps(*)</ReadAPI>
  </ThreadSafetyGroup>



  <ThreadSafetyGroup>
    <Name>List</Name>
    <WriteAPI>System.Collections.Generic.List*.Add*(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.List*.Clear(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.List*.Remove*(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.List*.Reverse(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.List*.Sort(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.List*.ToArray(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.List*.Insert*(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.List*.Item.set*</WriteAPI>

    <ReadAPI>System.Collections.Generic.List*.BinarySearch(*)*</ReadAPI>
    <ReadAPI>System.Collections.Generic.List*.Contains(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.List*.ConvertAll(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.List*.CopyTo(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.List*.Exists(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.List*.Find*(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.List*.GetRange(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.List*.*IndexOf(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.List*.Item.get*</ReadAPI>
    <ReadAPI>System.Collections.Generic.List*.MemberwiseClone(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.List*.Take*</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>SortedList</Name>
    <WriteAPI>System.Collections.Generic.SortedList*.Add(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.SortedList*.Clear(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.SortedList*.Remove(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.SortedList*.Item.set*</WriteAPI>
    <WriteAPI>System.Collections.Generic.SortedList*.SetByIndex(*)</WriteAPI>

    <ReadAPI>System.Collections.Generic.SortedList*.Clone(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.SortedList*.Item.get*</ReadAPI>
    <ReadAPI>System.Collections.Generic.SortedList*.Contains*(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.SortedList*.GetByIndex(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.SortedList*.GetKey*(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.SortedList*.GetValueList(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.SortedList*.IndexOfValue(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.SortedList*.MemberwiseClone(*)</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>Hashtable</Name>
    <WriteAPI>System.Collections.Hashtable.Add(*)</WriteAPI>
    <WriteAPI>System.Collections.Hashtable.Clear(*)</WriteAPI>
    <WriteAPI>System.Collections.Hashtable.Remove(*)</WriteAPI>
    <WriteAPI>System.Collections.Hashtable.Item.set*</WriteAPI>

    <ReadAPI>System.Collections.Hashtable.Item.get*</ReadAPI>
    <ReadAPI>System.Collections.Hashtable.Contains*(*)</ReadAPI>
    <ReadAPI>System.Collections.Hashtable.Clone(*)</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>Collection</Name>
    <WriteAPI>System.Collections.ObjectModel.Collection*.Add(*)</WriteAPI>
    <WriteAPI>System.Collections.ObjectModel.Collection*.Clear*(*)</WriteAPI>
    <WriteAPI>System.Collections.ObjectModel.Collection*.Insert*(*)</WriteAPI>
    <WriteAPI>System.Collections.ObjectModel.Collection*.Remove*(*)</WriteAPI>
    <WriteAPI>System.Collections.ObjectModel.Collection*.SetItem(*)</WriteAPI>
    <WriteAPI>System.Collections.ObjectModel.Collection*.Item.set*</WriteAPI>

    <ReadAPI>System.Collections.ObjectModel.Collection*.Item.get*</ReadAPI>
    <ReadAPI>System.Collections.ObjectModel.Collection*.Contains(*)</ReadAPI>
    <ReadAPI>System.Collections.ObjectModel.Collection*.CopyTo(*)</ReadAPI>
    <ReadAPI>System.Collections.ObjectModel.Collection*.IndexOf(*)</ReadAPI>
    <ReadAPI>System.Collections.ObjectModel.Collection*.MemberwiseClone(*)</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>ICollection</Name>
    <WriteAPI>System.Collections.Generic.ICollection*.Add(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.ICollection*.Clear(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.ICollection*.Remove(*)</WriteAPI>
    <ReadAPI>System.Collections.Generic.ICollection*.Contains(*)</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>Queue</Name>
    <WriteAPI>System.Collections.Generic.Queue*.Clear(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.Queue*.Dequeue(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.Queue*.Enqueue(*)</WriteAPI>

    <ReadAPI>System.Collections.Generic.Queue*.Clone(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.Queue*.MemberwiseClone(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.Queue*.CopyTo(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.Queue*.Contains(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.Queue*.Peek(*)</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>Stack</Name>
    <WriteAPI>System.Collections.Generic.Stack*.Clear(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.Stack*.Pop(*)</WriteAPI>
    <WriteAPI>System.Collections.Generic.Stack*.Push(*)</WriteAPI>

    <ReadAPI>System.Collections.Generic.Stack*.Clone(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.Stack*.MemberwiseClone(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.Stack*.CopyTo(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.Stack*.Contains(*)</ReadAPI>
    <ReadAPI>System.Collections.Generic.Stack*.Peek(*)</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>BitArray</Name>
    <WriteAPI>System.Collections.BitArray.Not(*)</WriteAPI>
    <WriteAPI>System.Collections.BitArray.Set*(*)</WriteAPI>
    <WriteAPI>System.Collections.BitArray.And*(*)</WriteAPI>
    <WriteAPI>System.Collections.BitArray.Or*(*)</WriteAPI>
    <WriteAPI>System.Collections.BitArray.Xor*(*)</WriteAPI>
    <WriteAPI>System.Collections.BitArray.Item.set*</WriteAPI>
    <WriteAPI>System.Collections.BitArray.Length.set*</WriteAPI>

    <ReadAPI>System.Collections.BitArray.CopyTo(*)</ReadAPI>
    <ReadAPI>System.Collections.BitArray.Clone(*)</ReadAPI>
    <ReadAPI>System.Collections.BitArray.Get(*)</ReadAPI>
    <ReadAPI>System.Collections.BitArray.Item.get*</ReadAPI>
    <ReadAPI>System.Collections.BitArray.Count.get*</ReadAPI>
    <ReadAPI>System.Collections.BitArray.Length.get*</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>Variable</Name>
    <WriteAPI>System.Activities.Variable.Set(*)</WriteAPI>
    <ReadAPI>System.Activities.Variable.Get(*)</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>AppDomain</Name>
    <WriteAPI>System.AppDomain.SetData(*)</WriteAPI>
    <ReadAPI>System.AppDomain.GetData(*)</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>Array</Name>
    <WriteAPI>System.Array.SetValue(*)</WriteAPI>
    <ReadAPI>System.Array.GetValue(*)</ReadAPI>
  </ThreadSafetyGroup>

  <ThreadSafetyGroup>
    <Name>ArrayList</Name>
    <WriteAPI>System.Collections.ArrayList.Add(*)</WriteAPI>
    <WriteAPI>System.Collections.ArrayList.AddRange(*)</WriteAPI>
    <WriteAPI>System.Collections.ArrayList.Clear(*)</WriteAPI>
    <WriteAPI>System.Collections.ArrayList.Insert*(*)</WriteAPI>
    <WriteAPI>System.Collections.ArrayList.Remove*(*)</WriteAPI>
    <WriteAPI>System.Collections.ArrayList.Sort(*)</WriteAPI>
    <WriteAPI>System.Collections.ArrayList.Reverse(*)</WriteAPI>
    <WriteAPI>System.Collections.ArrayList.SetRange(*)</WriteAPI>
    <WriteAPI>System.Collections.ArrayList.Item.set*</WriteAPI>

    <ReadAPI>System.Collections.ArrayList.BinarySearch(*)</ReadAPI>
    <ReadAPI>System.Collections.ArrayList.Clone(*)</ReadAPI>
    <ReadAPI>System.Collections.ArrayList.Contains(*)</ReadAPI>
    <ReadAPI>System.Collections.ArrayList.CopyTo(*)</ReadAPI>
    <ReadAPI>System.Collections.ArrayList.Item.get*</ReadAPI>
    <ReadAPI>System.Collections.ArrayList.*IndexOf(*)</ReadAPI>
    <ReadAPI>System.Collections.ArrayList.GetRange(*)</ReadAPI>
    <ReadAPI>System.Collections.ArrayList.MemberWiseClone(*)</ReadAPI>
    <ReadAPI>System.Collections.ArrayList.Count.get*</ReadAPI>
  </ThreadSafetyGroup>

</TSVDRuntimeConfiguration>